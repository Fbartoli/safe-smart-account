name: Deploy Safe Contracts (Matrix)

on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Target network for deployment'
        required: true
        default: 'custom'
        type: choice
        options:
        - custom
        - sepolia
        - mainnet
        - gnosis
        - zksync
      custom_node_url:
        description: 'Custom RPC endpoint URL (required when network=custom)'
        required: false
        type: string
      verify_only:
        description: 'Skip deployment and only verify existing contracts'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: 22.14.0

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Validate inputs
      run: |
        if [ "${{ github.event.inputs.network }}" = "custom" ] && [ -z "${{ github.event.inputs.custom_node_url }}" ]; then
          echo "❌ Error: Custom NODE_URL is required when using custom network"
          exit 1
        fi
        echo "✅ Input validation passed"

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.network || 'sepolia' }}
    
    strategy:
      fail-fast: false  # Continue other deployments if one fails
      matrix:
        include:
          - tag: "v1.4.1-3"
            package_manager: "npm"
            cache_key: "npm"
            install_cmd: "npm ci --ignore-scripts"
            build_cmd: "npm run build"
            deploy_cmd: "npx hardhat deploy-contracts"
            verify_cmd: "npx hardhat etherscan-verify --force-license true --license LGPL-3.0 && npx hardhat sourcify"
            
          - tag: "v1.3.0-1"
            package_manager: "npm"
            cache_key: "npm"
            install_cmd: "npm ci --ignore-scripts"
            build_cmd: "npm run build"
            deploy_cmd: "npx hardhat deploy-contracts"
            verify_cmd: "npx hardhat etherscan-verify --force-license true --license LGPL-3.0 && npx hardhat sourcify"
            
          - tag: "v1.3.0-libs.0"
            package_manager: "yarn"
            cache_key: "yarn"
            install_cmd: "yarn install --frozen-lockfile"
            build_cmd: "yarn build"
            deploy_cmd: "yarn deploy-all"
            verify_cmd: "yarn hardhat etherscan-verify && yarn hardhat local-verify"

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        ref: ${{ matrix.tag }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: ${{ matrix.cache_key }}

    - name: Install dependencies (${{ matrix.tag }})
      run: |
        echo "Installing dependencies for ${{ matrix.tag }} using ${{ matrix.package_manager }}"
        ${{ matrix.install_cmd }}

    - name: Build contracts (${{ matrix.tag }})
      run: |
        echo "Building contracts for ${{ matrix.tag }}"
        ${{ matrix.build_cmd }}

    - name: Deploy contracts (${{ matrix.tag }})
      if: ${{ github.event.inputs.verify_only != 'true' }}
      env:
        HARDHAT_NETWORK: ${{ github.event.inputs.network || 'sepolia' }}
        INFURA_KEY: ${{ secrets.INFURA_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        MNEMONIC: ${{ secrets.MNEMONIC }}
        NODE_URL: ${{ github.event.inputs.network == 'custom' && github.event.inputs.custom_node_url || secrets.NODE_URL }}
      run: |
        echo "🚀 Deploying ${{ matrix.tag }} to ${{ github.event.inputs.network || 'sepolia' }} network"
        ${{ matrix.deploy_cmd }} --network ${{ github.event.inputs.network || 'sepolia' }}

    - name: Verify contracts (${{ matrix.tag }})
      if: ${{ github.event.inputs.verify_only == 'true' }}
      env:
        HARDHAT_NETWORK: ${{ github.event.inputs.network || 'sepolia' }}
        INFURA_KEY: ${{ secrets.INFURA_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        MNEMONIC: ${{ secrets.MNEMONIC }}
        NODE_URL: ${{ github.event.inputs.network == 'custom' && github.event.inputs.custom_node_url || secrets.NODE_URL }}
      run: |
        echo "🔍 Verifying ${{ matrix.tag }} on ${{ github.event.inputs.network || 'sepolia' }} network"
        ${{ matrix.verify_cmd }} --network ${{ github.event.inputs.network || 'sepolia' }}

    - name: Upload deployment artifacts (${{ matrix.tag }})
      if: ${{ github.event.inputs.verify_only != 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: deployment-artifacts-${{ matrix.tag }}-${{ github.event.inputs.network == 'custom' && 'custom' || github.event.inputs.network || 'sepolia' }}-${{ github.sha }}
        path: |
          deployments/
          build/
        retention-days: 30

  summary:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()  # Run even if some deployments failed
    
    steps:
    - name: Generate deployment summary
      run: |
        echo "## 🛡️ Safe Smart Account Multi-Version Deployment" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ github.event.inputs.network }}" = "custom" ]; then
          echo "**Network:** Custom (${{ github.event.inputs.custom_node_url }})" >> $GITHUB_STEP_SUMMARY
        else
          echo "**Network:** ${{ github.event.inputs.network || 'sepolia' }}" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "**Operation:** ${{ github.event.inputs.verify_only == 'true' && 'Verification Only' || 'Deployment + Verification' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Timestamp:** $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 📋 Deployment Matrix Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Version | Package Manager | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|---------|----------------|--------|" >> $GITHUB_STEP_SUMMARY
        
        # Check deployment results (this would need to be enhanced with actual job results)
        echo "| v1.4.1-3 | npm | ${{ needs.deploy.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| v1.3.0-1 | npm | ${{ needs.deploy.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| v1.3.0-libs.0 | yarn | ${{ needs.deploy.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 🔗 Block Explorers" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        case "${{ github.event.inputs.network || 'sepolia' }}" in
          "mainnet")
            echo "- [Etherscan](https://etherscan.io/)" >> $GITHUB_STEP_SUMMARY
            ;;
          "sepolia")
            echo "- [Etherscan Sepolia](https://sepolia.etherscan.io/)" >> $GITHUB_STEP_SUMMARY
            ;;
          "gnosis")
            echo "- [Gnosis Chain Explorer](https://gnosisscan.io/)" >> $GITHUB_STEP_SUMMARY
            ;;
          "zksync")
            echo "- [zkSync Explorer](https://explorer.zksync.io/)" >> $GITHUB_STEP_SUMMARY
            ;;
        esac
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 📦 Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "Deployment artifacts are available in the workflow artifacts section above." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.deploy.result }}" != "success" ]; then
          echo "### ⚠️ Deployment Warnings" >> $GITHUB_STEP_SUMMARY
          echo "Some deployments may have failed. Check individual job logs for details." >> $GITHUB_STEP_SUMMARY
        else
          echo "### ✅ All Deployments Successful" >> $GITHUB_STEP_SUMMARY
          echo "All Safe contract versions have been successfully deployed!" >> $GITHUB_STEP_SUMMARY
        fi

  notify-failure:
    needs: deploy
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
    - name: Notify on deployment failure
      run: |
        echo "## ❌ Matrix Deployment Failed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Network:** ${{ github.event.inputs.network || 'sepolia' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Error:** One or more deployments failed. Check individual job logs for details." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔍 Troubleshooting" >> $GITHUB_STEP_SUMMARY
        echo "1. Check individual matrix job logs above" >> $GITHUB_STEP_SUMMARY
        echo "2. Verify network configuration and secrets" >> $GITHUB_STEP_SUMMARY
        echo "3. Check if contracts are already deployed" >> $GITHUB_STEP_SUMMARY
