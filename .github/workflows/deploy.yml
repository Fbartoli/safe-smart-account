name: Deploy Contracts

on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Target network for deployment'
        required: true
        default: 'custom'
        type: choice
        options:
        - custom
      custom_node_url:
        description: 'Custom RPC endpoint URL (required when network=custom)'
        required: false
        type: string
      verify_only:
        description: 'Skip deployment and only verify existing contracts'
        required: false
        default: false
        type: boolean
      tag:
        description: 'Version tag to deploy'
        required: true
        default: 'v1.4.1-3'
        type: choice
        options:
        - v1.4.1-3
        - v1.3.0-1
        - v1.3.0-libs.0

env:
  NODE_VERSION: 22.14.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.network || 'sepolia' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        ref: ${{ github.event.inputs.tag }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: ${{ github.event.inputs.tag == 'v1.3.0-libs.0' && 'yarn' || 'npm' }}

    - name: Install dependencies
      run: |
        if [ "${{ github.event.inputs.tag }}" = "v1.3.0-libs.0" ]; then
          echo "Using yarn for v1.3.0-libs.0"
          yarn install --frozen-lockfile
        else
          echo "Using npm for ${{ github.event.inputs.tag }}"
          npm ci --ignore-scripts
        fi

    - name: Validate custom network input
      if: ${{ github.event.inputs.network == 'custom' }}
      run: |
        if [ -z "${{ github.event.inputs.custom_node_url }}" ]; then
          echo "❌ Error: Custom NODE_URL is required when using custom network"
          exit 1
        fi
        echo "✅ Custom network validation passed"


    - name: Build contracts
      run: |
        if [ "${{ github.event.inputs.tag }}" = "v1.3.0-libs.0" ]; then
          yarn build
        else
          npm run build
        fi

    - name: Deploy contracts
      if: ${{ github.event.inputs.verify_only != 'true' }}
      env:
        HARDHAT_NETWORK: ${{ github.event.inputs.network || 'sepolia' }}
        INFURA_KEY: ${{ secrets.INFURA_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        MNEMONIC: ${{ secrets.MNEMONIC }}
        NODE_URL: ${{ github.event.inputs.network == 'custom' && github.event.inputs.custom_node_url || secrets.NODE_URL }}
      run: |
        echo "Deploying to ${{ github.event.inputs.network || 'sepolia' }} network"
        if [ "${{ github.event.inputs.tag }}" = "v1.3.0-libs.0" ]; then
          yarn deploy-all ${{ github.event.inputs.network || 'sepolia' }}
        else
          npx hardhat deploy-contracts --network ${{ github.event.inputs.network || 'sepolia' }}
        fi

    - name: Verify contracts only
      if: ${{ github.event.inputs.verify_only == 'true' }}
      env:
        HARDHAT_NETWORK: ${{ github.event.inputs.network || 'sepolia' }}
        INFURA_KEY: ${{ secrets.INFURA_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        MNEMONIC: ${{ secrets.MNEMONIC }}
        NODE_URL: ${{ github.event.inputs.network == 'custom' && github.event.inputs.custom_node_url || secrets.NODE_URL }}
      run: |
        echo "Verifying contracts on ${{ github.event.inputs.network || 'sepolia' }} network"
        if [ "${{ github.event.inputs.tag }}" = "v1.3.0-libs.0" ]; then
          yarn hardhat --network ${{ github.event.inputs.network || 'sepolia' }} etherscan-verify
          yarn hardhat --network ${{ github.event.inputs.network || 'sepolia' }} local-verify
        else
          npx hardhat etherscan-verify --network ${{ github.event.inputs.network || 'sepolia' }} --force-license true --license LGPL-3.0
          npx hardhat sourcify --network ${{ github.event.inputs.network || 'sepolia' }}
        fi

    - name: Generate deployment summary
      if: ${{ github.event.inputs.verify_only != 'true' }}
      run: |
        echo "## 🚀 Smart Contract Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.network }}" = "custom" ]; then
          echo "**Network:** Custom (${{ github.event.inputs.custom_node_url }})" >> $GITHUB_STEP_SUMMARY
          DEPLOYMENT_DIR="deployments/custom"
        else
          echo "**Network:** ${{ github.event.inputs.network || 'sepolia' }}" >> $GITHUB_STEP_SUMMARY
          DEPLOYMENT_DIR="deployments/${{ github.event.inputs.network || 'sepolia' }}"
        fi
        echo "**Tag:** \`${{ github.event.inputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        # Check if deployment artifacts exist and extract addresses
        if [ -d "$DEPLOYMENT_DIR" ]; then
          echo "### 📋 Deployed Contracts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # List all deployment files
          for file in $DEPLOYMENT_DIR/*.json; do
            if [ -f "$file" ]; then
              contract_name=$(basename "$file" .json)
              address=$(jq -r '.address' "$file" 2>/dev/null || echo "N/A")
              if [ "$address" != "null" ] && [ "$address" != "N/A" ]; then
                echo "- **${contract_name}**: \`${address}\`" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          done
          echo "" >> $GITHUB_STEP_SUMMARY
        fi

        echo "### 🔗 Block Explorers" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        case "${{ github.event.inputs.network || 'sepolia' }}" in
          "mainnet")
            echo "- [Etherscan](https://etherscan.io/)" >> $GITHUB_STEP_SUMMARY
            ;;
          "sepolia")
            echo "- [Etherscan Sepolia](https://sepolia.etherscan.io/)" >> $GITHUB_STEP_SUMMARY
            ;;
          "gnosis")
            echo "- [Gnosis Chain Explorer](https://gnosisscan.io/)" >> $GITHUB_STEP_SUMMARY
            ;;
          "zksync")
            echo "- [zkSync Explorer](https://explorer.zksync.io/)" >> $GITHUB_STEP_SUMMARY
            ;;
        esac
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### ✅ Verification Status" >> $GITHUB_STEP_SUMMARY
        echo "- Etherscan: ✅ Verified" >> $GITHUB_STEP_SUMMARY
        echo "- Sourcify: ✅ Verified" >> $GITHUB_STEP_SUMMARY


    - name: Upload deployment artifacts
      if: ${{ github.event.inputs.verify_only != 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: deployment-artifacts-${{ github.event.inputs.network == 'custom' && 'custom' || github.event.inputs.network || 'sepolia' }}-${{ github.event.inputs.tag }}-${{ github.sha }}
        path: |
          deployments/
          build/
        retention-days: 30

    - name: Notify on deployment failure
      if: failure()
      run: |
        echo "## ❌ Deployment Failed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.network }}" = "custom" ]; then
          echo "**Network:** Custom (${{ github.event.inputs.custom_node_url }})" >> $GITHUB_STEP_SUMMARY
        else
          echo "**Network:** ${{ github.event.inputs.network || 'sepolia' }}" >> $GITHUB_STEP_SUMMARY
        fi
        echo "**Tag:** \`${{ github.event.inputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Error:** Check the logs above for details" >> $GITHUB_STEP_SUMMARY